<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MedallionShell</name>
    </assembly>
    <members>
        <member name="T:Medallion.Shell.Command">
            <summary>
            Represents an executing <see cref="P:Medallion.Shell.Command.Process"/> as well as related asynchronous activity (e. g. the piping of
            input and output streams)
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.Kill">
            <summary>
            Kills the <see cref="P:Medallion.Shell.Command.Process"/> if it is still executing
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.Wait">
            <summary>
            A convenience method for <code>command.Task.Wait()</code>
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.op_BitwiseOr(Medallion.Shell.Command,Medallion.Shell.Command)">
            <summary>
            Implements <see cref="T:Medallion.Shell.Command"/> piping as in bash. The first <see cref="T:Medallion.Shell.Command"/>'s standard output is piped
            to the second's standard input. Returns a new <see cref="T:Medallion.Shell.Command"/> instance whose <see cref="P:Medallion.Shell.Command.Task"/> tracks
            the progress of the entire chain
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.op_GreaterThan(Medallion.Shell.Command,System.IO.Stream)">
            <summary>
            Standard output redirection as in bash. The <see cref="T:Medallion.Shell.Command"/>'s standard output is written to the given
            <paramref name="stream"/>. Returns a new <see cref="T:Medallion.Shell.Command"/> whose <see cref="P:Medallion.Shell.Command.Task"/> tracks the progress
            of both this <see cref="T:Medallion.Shell.Command"/> and the IO being performed
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.op_LessThan(Medallion.Shell.Command,System.IO.Stream)">
            <summary>
            Standard input redirection as in bash. The given <paramref name="stream"/> is written to the <see cref="T:Medallion.Shell.Command"/>'s 
            standard output. Returns a new <see cref="T:Medallion.Shell.Command"/> whose <see cref="P:Medallion.Shell.Command.Task"/> tracks the progress
            of both this <see cref="T:Medallion.Shell.Command"/> and the IO being performed
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.op_GreaterThan(Medallion.Shell.Command,System.IO.FileInfo)">
            <summary>
            Standard output redirection as in bash. The <see cref="T:Medallion.Shell.Command"/>'s standard output is written to the given
            <paramref name="file"/>. Returns a new <see cref="T:Medallion.Shell.Command"/> whose <see cref="P:Medallion.Shell.Command.Task"/> tracks the progress
            of both this <see cref="T:Medallion.Shell.Command"/> and the IO being performed
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.op_LessThan(Medallion.Shell.Command,System.IO.FileInfo)">
            <summary>
            Standard input redirection as in bash. The given <paramref name="file"/> is written to the <see cref="T:Medallion.Shell.Command"/>'s 
            standard output. Returns a new <see cref="T:Medallion.Shell.Command"/> whose <see cref="P:Medallion.Shell.Command.Task"/> tracks the progress
            of both this <see cref="T:Medallion.Shell.Command"/> and the IO being performed
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.op_GreaterThan(Medallion.Shell.Command,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Standard output redirection as in bash. The lines of <see cref="T:Medallion.Shell.Command"/>'s standard output are added to the given
            collection (<paramref name="lines"/> MUST be an instance of <see cref="T:System.Collections.Generic.ICollection`1"/>; the use of the <see cref="T:System.Collections.Generic.IEnumerable`1"/>. 
            type is to provide the required parity with the input redirection operator. Returns a new <see cref="T:Medallion.Shell.Command"/> 
            whose <see cref="P:Medallion.Shell.Command.Task"/> tracks the progress of both this <see cref="T:Medallion.Shell.Command"/> and the IO being performed
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.op_LessThan(Medallion.Shell.Command,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Standard input redirection as in bash. The items in <paramref name="lines"/> are written to the <see cref="T:Medallion.Shell.Command"/>'s 
            standard output as lines of text. Returns a new <see cref="T:Medallion.Shell.Command"/> whose <see cref="P:Medallion.Shell.Command.Task"/> tracks the 
            progress of both this <see cref="T:Medallion.Shell.Command"/> and the IO being performed
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.op_GreaterThan(Medallion.Shell.Command,System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Standard output redirection as in bash. The chars of <see cref="T:Medallion.Shell.Command"/>'s standard output are added to the given
            collection (<paramref name="chars"/> MUST be an instance of <see cref="T:System.Collections.Generic.ICollection`1"/>; the use of the <see cref="T:System.Collections.Generic.IEnumerable`1"/>. 
            type is to provide the required parity with the input redirection operator. Returns a new <see cref="T:Medallion.Shell.Command"/> 
            whose <see cref="P:Medallion.Shell.Command.Task"/> tracks the progress of both this <see cref="T:Medallion.Shell.Command"/> and the IO being performed
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.op_LessThan(Medallion.Shell.Command,System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Standard input redirection as in bash. The items in <paramref name="chars"/> are written to the <see cref="T:Medallion.Shell.Command"/>'s 
            standard output. Returns a new <see cref="T:Medallion.Shell.Command"/> whose <see cref="P:Medallion.Shell.Command.Task"/> tracks the 
            progress of both this <see cref="T:Medallion.Shell.Command"/> and the IO being performed
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.Run(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Action{Medallion.Shell.Shell.Options})">
            <summary>
            A convenience method for calling <see cref="M:Medallion.Shell.Shell.Run(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Action{Medallion.Shell.Shell.Options})"/> on <see cref="P:Medallion.Shell.Shell.Default"/>
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.Run(System.String,System.Object[])">
            <summary>
            A convenience method for calling <see cref="M:Medallion.Shell.Shell.Run(System.String,System.Object[])"/> on <see cref="P:Medallion.Shell.Shell.Default"/>
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.System#IDisposable#Dispose">
            <summary>
            Releases all resources associated with this <see cref="T:Medallion.Shell.Command"/>. This is only required
            if the <see cref="M:Medallion.Shell.Shell.Options.DisposeOnExit(System.Boolean)"/> has been set to false
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.DisposeInternal">
            <summary>
            Subclass-specific implementation of <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Medallion.Shell.Command.ThrowIfDisposed">
            <summary>
            Throws <see cref="T:System.ObjectDisposedException"/> if the <see cref="T:Medallion.Shell.Command"/> has been disposed
            </summary>
        </member>
        <member name="P:Medallion.Shell.Command.Process">
            <summary>
            The <see cref="P:Medallion.Shell.Command.Process"/> associated with this <see cref="T:Medallion.Shell.Command"/>. In a multi-process command,
            this will be the final <see cref="P:Medallion.Shell.Command.Process"/> in the chain. NOTE: this property cannot be accessed when using
            the DisposeOnExit option
            </summary>
        </member>
        <member name="P:Medallion.Shell.Command.Processes">
            <summary>
            All <see cref="P:Medallion.Shell.Command.Process"/>es associated with this <see cref="T:Medallion.Shell.Command"/>. NOTE: this property cannot be accessed when using
            the DisposeOnExit option
            </summary>
        </member>
        <member name="P:Medallion.Shell.Command.StandardInput">
            <summary>
            Writes to the process's standard input
            </summary>
        </member>
        <member name="P:Medallion.Shell.Command.StandardOutput">
            <summary>
            Reads from the process's standard output
            </summary>
        </member>
        <member name="P:Medallion.Shell.Command.StandardError">
            <summary>
            Reads from the process's standard error
            </summary>
        </member>
        <member name="P:Medallion.Shell.Command.Result">
            <summary>
            A convenience method for <code>command.Task.Result</code>
            </summary>
        </member>
        <member name="P:Medallion.Shell.Command.Task">
            <summary>
            A <see cref="P:Medallion.Shell.Command.Task"/> representing the progress of this <see cref="T:Medallion.Shell.Command"/>
            </summary>
        </member>
        <member name="T:Medallion.Shell.CommandResult">
            <summary>
            The result of a <see cref="T:Medallion.Shell.Command"/>
            </summary>
        </member>
        <member name="P:Medallion.Shell.CommandResult.ExitCode">
            <summary>
            The exit code of the command's process
            </summary>
        </member>
        <member name="P:Medallion.Shell.CommandResult.Success">
            <summary>
            Returns true iff the exit code is 0 (indicating success)
            </summary>
        </member>
        <member name="P:Medallion.Shell.CommandResult.StandardOutput">
            <summary>
            If available, the full standard output text of the command
            </summary>
        </member>
        <member name="P:Medallion.Shell.CommandResult.StandardError">
            <summary>
            If available, the full standard error text of the command
            </summary>
        </member>
        <member name="T:Medallion.Shell.ErrorExitCodeException">
            <summary>
            Represents a process that failed with a non-zero exit code. This will be thrown by a <see cref="T:Medallion.Shell.Command"/>
            created with <see cref="M:Medallion.Shell.Shell.Options.ThrowOnError(System.Boolean)"/> called
            </summary>
        </member>
        <member name="P:Medallion.Shell.ErrorExitCodeException.ExitCode">
            <summary>
            The exit code of the process
            </summary>
        </member>
        <member name="M:Medallion.Shell.Throw.IfNull``1(``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the given value is null
            </summary>
        </member>
        <member name="M:Medallion.Shell.Throw.If(System.Boolean,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentException"/> if the given condition is true
            </summary>
        </member>
        <member name="M:Medallion.Shell.Throw.IfOutOfRange``1(``0,System.String,System.Nullable{``0},System.Nullable{``0})">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the given value is outside of the specified range
            </summary>
        </member>
        <member name="M:Medallion.Shell.Throw`1.If(System.Boolean,System.String)">
            <summary>
            Throws an exception of type <typeparamref name="TException"/> if the condition is true
            </summary>
        </member>
        <member name="M:Medallion.Shell.Throw`1.If(System.Boolean,System.Func{System.String})">
            <summary>
            As <see cref="M:Medallion.Shell.Throw.If(System.Boolean,System.String)"/>, but allows the message to be specified lazily. The message function will only be evaluated
            if the condition is true
            </summary>
        </member>
        <member name="T:Medallion.Shell.Shell">
            <summary>
            Represents an object which can be used to dispatch <see cref="T:Medallion.Shell.Command"/>s
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.#ctor(System.Action{Medallion.Shell.Shell.Options})">
            <summary>
            Creates a shell whose commands will receive the given configuration options
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Run(System.String,System.Collections.Generic.IEnumerable{System.Object},System.Action{Medallion.Shell.Shell.Options})">
            <summary>
            Executes the given <paramref name="executable"/> with the given <paramref name="arguments"/> and
            <paramref name="options"/>
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Run(System.String,System.Object[])">
            <summary>
            Executes the given <paramref name="executable"/> with the given <paramref name="arguments"/> 
            </summary>
        </member>
        <member name="P:Medallion.Shell.Shell.Default">
            <summary>
            A <see cref="T:Medallion.Shell.Shell"/> that uses default options
            </summary>
        </member>
        <member name="T:Medallion.Shell.Shell.Options">
            <summary>
            Provides a builder interface for configuring the options for creating and executing
            a <see cref="M:Medallion.Shell.Shell.Options.Command(System.Action{Medallion.Shell.Command})"/>
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Options.RestoreDefaults">
            <summary>
            Restores all settings to the default value
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Options.StartInfo(System.Action{System.Diagnostics.ProcessStartInfo})">
            <summary>
            Specifies a function which can modify the <see cref="T:System.Diagnostics.ProcessStartInfo"/>. Multiple such functions
            can be specified this way
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Options.Command(System.Action{Medallion.Shell.Command})">
            <summary>
            Specifies a function which can modify the <see cref="M:Medallion.Shell.Shell.Options.Command(System.Action{Medallion.Shell.Command})"/>. Multiple such functions
            can be specified this way
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Options.WorkingDirectory(System.String)">
            <summary>
            Sets the initial working directory of the <see cref="M:Medallion.Shell.Shell.Options.Command(System.Action{Medallion.Shell.Command})"/> (defaults to the current working directory)
            </summary>.
        </member>
        <member name="M:Medallion.Shell.Shell.Options.EnvironmentVariable(System.String,System.String)">
            <summary>
            Adds or overwrites an environment variable to be passed to the <see cref="M:Medallion.Shell.Shell.Options.Command(System.Action{Medallion.Shell.Command})"/>
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Options.EnvironmentVariables(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Adds or overwrites a set of environmental variables to be passed to the <see cref="M:Medallion.Shell.Shell.Options.Command(System.Action{Medallion.Shell.Command})"/>
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Options.ThrowOnError(System.Boolean)">
            <summary>
            If specified, a non-zero exit code will cause the <see cref="M:Medallion.Shell.Shell.Options.Command(System.Action{Medallion.Shell.Command})"/>'s <see cref="T:System.Threading.Tasks.Task"/> to fail
            with <see cref="T:Medallion.Shell.ErrorExitCodeException"/>. Defaults to false
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Options.DisposeOnExit(System.Boolean)">
            <summary>
            If specified, the underlying <see cref="T:System.Diagnostics.Process"/> object for the command will be disposed when the process exits.
            This means that there is no need to dispose of a <see cref="M:Medallion.Shell.Shell.Options.Command(System.Action{Medallion.Shell.Command})"/>. 
            
            This also means that <see cref="P:Medallion.Shell.Command.Process"/> cannot be reliably accessed, 
            since it may exit at any time. 
            
            Defaults to true
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Options.Syntax(Medallion.Shell.CommandLineSyntax)">
            <summary>
            Specifies the <see cref="P:Medallion.Shell.Shell.Options.CommandLineSyntax"/> to use for escaping arguments. Defaults to an instance of
            <see cref="T:Medallion.Shell.WindowsCommandLineSyntax"/>
            </summary>
        </member>
        <member name="M:Medallion.Shell.Shell.Options.Timeout(System.TimeSpan)">
            <summary>
            Specifies a timeout after which the process should be killed. Defaults to <see cref="F:System.Threading.Timeout.InfiniteTimeSpan"/>
            </summary>
        </member>
        <member name="T:Medallion.Shell.Streams.ProcessStreamReader">
            <summary>
            An implementation of <see cref="T:System.IO.TextReader"/> with additional methods to control behavior. The 
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamReader.GetLines">
            <summary>
            Enumerates each remaining line of output. The enumerable cannot be re-used
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamReader.Discard">
            <summary>
            Discards all output from the underlying stream. This prevents the process from blocking because
            the output pipe's buffer is full without wasting any memory on buffering the output
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamReader.StopBuffering">
            <summary>
            By default, the underlying stream output is buffered to prevent the process from blocking
            because the output pipe's buffer is full. Calling this method disables this behavior. This is useful
            when it is desirable to have the process block while waiting for output to be read
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamReader.PipeToAsync(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Pipes the output of the underlying stream to the given stream. This occurs asynchronously, so this
            method returns before all content has been written
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamReader.PipeToAsync(System.IO.TextWriter,System.Boolean,System.Boolean)">
            <summary>
            Pipes the output of the reader to the given writer. This occurs asynchronously, so this
            method returns before all content has been written
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamReader.PipeToAsync(System.Collections.Generic.ICollection{System.String},System.Boolean)">
            <summary>
            Asynchronously copies each line of output to the given collection
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamReader.PipeToAsync(System.IO.FileInfo,System.Boolean)">
            <summary>
            Asynchronously writes all output to the given file
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamReader.PipeToAsync(System.Collections.Generic.ICollection{System.Char},System.Boolean)">
            <summary>
            Asynchronously copies each charater to the given collection
            </summary>
        </member>
        <member name="P:Medallion.Shell.Streams.ProcessStreamReader.BaseStream">
            <summary>
            Provides access to the underlying <see cref="T:System.IO.Stream"/>. Equivalent to <see cref="P:System.IO.StreamReader.BaseStream"/>
            </summary>
        </member>
        <member name="F:Medallion.Shell.Streams.InternalProcessStreamReader.processStream">
            <summary>
            The underlying <see cref="T:System.IO.Stream"/> from the <see cref="T:System.Diagnostics.Process"/>
            </summary>
        </member>
        <member name="F:Medallion.Shell.Streams.Pipe.MaxStableSize">
            <summary>
            The maximum size at which the pipe will be left empty. Using 2 * <see cref="F:Medallion.Shell.Constants.ByteBufferSize"/>
            helps prevent thrashing if data is being pushed through the pipe at that rate
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.Pipe.UpdateSignalsNoLock">
            <summary>
            MA: I used to have the signals updated in various ways and in various places
            throughout the code. Now I have just one function that sets both signals to the correct
            values. This is called from <see cref="M:Medallion.Shell.Streams.Pipe.ReadNoLock(System.Byte[],System.Int32,System.Int32)"/>, <see cref="M:Medallion.Shell.Streams.Pipe.WriteNoLock(System.Byte[],System.Int32,System.Int32)"/>, 
            <see cref="M:Medallion.Shell.Streams.Pipe.InternalCloseReadSideNoLock"/>, and <see cref="M:Medallion.Shell.Streams.Pipe.InternalCloseWriteSideNoLock"/>.
            
            While it may seem like this does extra work, nearly all cases are necessary. For example, we used
            to say "signal bytes available if count &gt; 0" at the end of <see cref="M:Medallion.Shell.Streams.Pipe.WriteNoLock(System.Byte[],System.Int32,System.Int32)"/>. The problem is
            that we could have the following sequence of operations:
            1. <see cref="M:Medallion.Shell.Streams.Pipe.ReadNoLockAsync(System.Byte[],System.Int32,System.Int32,System.TimeSpan,System.Threading.CancellationToken)"/> blocks on <see cref="F:Medallion.Shell.Streams.Pipe.bytesAvailableSignal"/>
            2. <see cref="M:Medallion.Shell.Streams.Pipe.WriteNoLock(System.Byte[],System.Int32,System.Int32)"/> writes and signals
            3. <see cref="M:Medallion.Shell.Streams.Pipe.ReadNoLockAsync(System.Byte[],System.Int32,System.Int32,System.TimeSpan,System.Threading.CancellationToken)"/> wakes up
            4. Another <see cref="M:Medallion.Shell.Streams.Pipe.WriteNoLock(System.Byte[],System.Int32,System.Int32)"/> call writes and re-signals
            5. <see cref="M:Medallion.Shell.Streams.Pipe.ReadNoLockAsync(System.Byte[],System.Int32,System.Int32,System.TimeSpan,System.Threading.CancellationToken)"/> reads ALL content and returns, leaving <see cref="F:Medallion.Shell.Streams.Pipe.bytesAvailableSignal"/> signaled (invalid)
            
            This new implementation avoids this because the <see cref="M:Medallion.Shell.Streams.Pipe.ReadNoLock(System.Byte[],System.Int32,System.Int32)"/> call inside <see cref="M:Medallion.Shell.Streams.Pipe.ReadNoLockAsync(System.Byte[],System.Int32,System.Int32,System.TimeSpan,System.Threading.CancellationToken)"/> will
            properly unsignal after it consumes ALL the contents
            </summary>
        </member>
        <member name="T:Medallion.Shell.Streams.ProcessStreamWriter">
            <summary>
            Provides functionality similar to a <see cref="T:System.IO.StreamWriter"/> but with additional methods to simplify
            working with a process's standard input
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.PipeFromAsync(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Asynchronously copies <paramref name="stream"/> to this stream
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.PipeFromAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Asynchronously writes each item in <paramref name="lines"/> to this writer as a separate line
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.PipeFromAsync(System.IO.TextReader,System.Boolean,System.Boolean)">
            <summary>
            Asynchronously writes all content from <paramref name="reader"/> to this writer
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.PipeFromAsync(System.IO.FileInfo,System.Boolean)">
            <summary>
            Asynchronously writes all content from <paramref name="file"/> to this stream
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.PipeFromAsync(System.Collections.Generic.IEnumerable{System.Char},System.Boolean)">
            <summary>
            Asynchronously writes all content from <paramref name="chars"/> to this writer
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Dispose(System.Boolean)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Flush">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.FlushAsync">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Boolean)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Char)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Char[])">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Decimal)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Double)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Single)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Int32)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Int64)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.Object)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.String,System.Object)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.String,System.Object,System.Object)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.String,System.Object[])">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.String)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.UInt32)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.Write(System.UInt64)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteAsync(System.Char)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteAsync(System.String)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Boolean)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Char)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Char[])">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Decimal)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Double)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Single)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Int32)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Int64)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.Object)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.String,System.Object)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.String)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.UInt32)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLine(System.UInt64)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLineAsync">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLineAsync(System.Char)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="M:Medallion.Shell.Streams.ProcessStreamWriter.WriteLineAsync(System.String)">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="P:Medallion.Shell.Streams.ProcessStreamWriter.BaseStream">
            <summary>
            Provides access to the underlying <see cref="T:System.IO.Stream"/>. Equivalent to <see cref="P:System.IO.StreamWriter.BaseStream"/>
            </summary>
        </member>
        <member name="P:Medallion.Shell.Streams.ProcessStreamWriter.AutoFlush">
            <summary>
            Determines whether writes are automatically flushed to the underlying <see cref="T:System.IO.Stream"/> after each write.
            Equivalent to <see cref="P:System.IO.StreamWriter.AutoFlush"/>. Defaults to TRUE
            </summary>
        </member>
        <member name="P:Medallion.Shell.Streams.ProcessStreamWriter.Encoding">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="P:Medallion.Shell.Streams.ProcessStreamWriter.FormatProvider">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="P:Medallion.Shell.Streams.ProcessStreamWriter.NewLine">
            <summary>
            Forwards to the implementation in the <see cref="T:System.IO.StreamWriter"/> class
            </summary>
        </member>
        <member name="T:Medallion.Shell.CommandLineSyntax">
            <summary>
            Acts as an abstract class for handling the escaping of arguments when passed to a <see cref="T:System.Diagnostics.Process"/>.
            </summary>
        </member>
        <member name="M:Medallion.Shell.CommandLineSyntax.CreateArgumentString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a combined argument string that can be used with <see cref="P:System.Diagnostics.ProcessStartInfo.Arguments"/>. The combined
            string should escape all arguments appropriately so that the process receives the same strings as passed into this method
            </summary>
            <param name="arguments">the arguments to the process</param>
            <returns>the argument string</returns>
        </member>
        <member name="T:Medallion.Shell.WindowsCommandLineSyntax">
            <summary>
            Provides <see cref="T:Medallion.Shell.CommandLineSyntax"/> functionality for windows
            </summary>
        </member>
        <member name="M:Medallion.Shell.WindowsCommandLineSyntax.CreateArgumentString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Provides <see cref="T:Medallion.Shell.CommandLineSyntax"/> functionality for windows
            </summary>
        </member>
    </members>
</doc>
